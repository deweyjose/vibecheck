name: Terraform Plan & Apply

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: true
  TF_INPUT: false
  ACCOUNT_ID: ${{ github.ref == 'refs/heads/main' ? secrets.AWS_ACCOUNT_ID_PROD : secrets.AWS_ACCOUNT_ID_DEV }}

jobs:
  plan:
    name: Terraform Plan
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      exit_code: ${{ steps.plan.outputs.exit_code }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/github-actions-terraform-dev
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infrastructure/environments/dev
        run: terraform init

      - name: Terraform Plan (detailed exit code)
        id: plan
        working-directory: infrastructure/environments/dev
        run: |
          set +e
          terraform plan -detailed-exitcode -out=tfplan
          echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Upload Plan
        if: steps.plan.outputs.exit_code == '2'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infrastructure/environments/dev/tfplan

  approve:
    name: Wait for Manual Approval
    needs: plan
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && needs.plan.outputs.exit_code == '2'
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: your-github-username
          issue-title: "Terraform Apply Approval Required"
          issue-body: "Review and approve to apply Terraform changes to dev."

  apply:
    name: Terraform Apply
    permissions:
      id-token: write
      contents: read
    needs: [plan, approve]
    runs-on: ubuntu-latest
    if: needs.plan.outputs.exit_code == '2'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/github-actions-terraform-dev
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: infrastructure/environments/dev

      - name: Terraform Apply (safely)
        working-directory: infrastructure/environments/dev
        run: |
          if [ -f tfplan ]; then
            terraform apply -auto-approve tfplan
          else
            echo "❌ Plan file not found. Skipping apply."
            exit 1
          fi

  no-op:
    name: No Changes to Apply
    needs: plan
    runs-on: ubuntu-latest
    if: needs.plan.outputs.exit_code == '0'
    steps:
      - run: echo "✅ No changes. Infrastructure is up-to-date."
